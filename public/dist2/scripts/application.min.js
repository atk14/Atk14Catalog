/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/scripts/application.js":
/*!***************************************!*\
  !*** ./public/scripts/application.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* Imports */
//import * as bootstrap from 'bootstrap';
bootstrap = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.esm.js");
window.$ = window.jQuery = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
__webpack_require__(/*! unobfuscatejs */ "./node_modules/unobfuscatejs/src/jquery.unobfuscate.js");
//import 'swiper';
//Swiper.use([Navigation, Pagination, Scrollbar]);

/* global window */
(function (window, $, undefined) {
  "use strict";

  var document = window.document,
    UTILS = window.UTILS,
    // Uncomment this if you need something from UTILS

    APPLICATION = {
      common: {
        // Application-wide code.
        init: function init() {
          // Detect Bootstrap version
          if (typeof bootstrap.Tooltip.VERSION !== "undefined") {
            window.bootstrapVersion = parseInt(Array.from(bootstrap.Tooltip.VERSION)[0]);
          } else {
            window.bootstrapVersion = parseInt(Array.from($.fn.tooltip.Constructor.VERSION)[0]);
          }

          // Restores email addresses misted by the no_spam helper
          $(".atk14_no_spam").unobfuscate({
            atstring: "[at-sign]",
            dotstring: "[dot-sign]"
          });

          // Links with the "blank" class are pointing to new window
          $("a.blank").attr("target", "_blank");

          // Form hints.
          $(".help-hint").each(function () {
            var $this = $(this),
              $field = $this.closest(".form-group").find(".form-control"),
              title = $this.data("title") || "",
              content = $this.html(),
              popoverOptions = {
                html: true,
                trigger: "focus",
                title: title,
                content: content
              };
            if (window.bootstrapVersion === 5) {
              new bootstrap.Popover($field.get(0), popoverOptions);
            } else {
              $field.popover(popoverOptions);
            }
          });

          // Init Swiper
          //UTILS.initSwiper();
        }
      },

      logins: {
        create_new: function create_new() {
          $("#id_login").focus();
        }
      },
      users: {
        // Controller-wide code.
        init: function init() {},
        // Action-specific code
        create_new: function create_new() {
          /*
           * Check whether login is available.
           * Simple demo of working with an API.
           */
          var $login = $("#id_login"),
            m = "Username is already taken.",
            h = "<p class='alert alert-danger'>" + m + "</p>",
            $status = $(h).hide().appendTo($login.closest(".form-group"));
          $login.on("change", function () {
            // Login input value to check.
            var value = $login.val(),
              lang = $("html").attr("lang"),
              // API URL.
              url = "/api/" + lang + "/login_availabilities/detail/",
              // GET values for API. Available formats: xml, json, yaml, jsonp.
              data = {
                login: value,
                format: "json"
              };

            // AJAX request to the API.
            if (value !== "") {
              $.ajax({
                dataType: "json",
                url: url,
                data: data,
                success: function success(json) {
                  if (json.status !== "available") {
                    $status.fadeIn();
                  } else {
                    $status.fadeOut();
                  }
                }
              });
            }
          }).change();
        }
      },
      // In this json, the actions for namespace "api" can be defined
      api: {}
    };

  /*
   * Garber-Irish DOM-based routing.
   * See: http://goo.gl/z9dmd
   */
  APPLICATION.INITIALIZER = {
    exec: function exec(namespace, controller, action) {
      var ns = APPLICATION,
        c = controller,
        a = action;
      if (namespace && namespace.length > 0 && ns[namespace]) {
        ns = ns[namespace];
      }
      if (a === undefined) {
        a = "init";
      }
      if (c !== "" && ns[c] && typeof ns[c][a] === "function") {
        ns[c][a]();
      }
    },
    init: function init() {
      var body = document.body,
        namespace = body.getAttribute("data-namespace"),
        controller = body.getAttribute("data-controller"),
        action = body.getAttribute("data-action");
      APPLICATION.INITIALIZER.exec(namespace, "common");
      APPLICATION.INITIALIZER.exec(namespace, controller);
      APPLICATION.INITIALIZER.exec(namespace, controller, action);
    }
  };

  // Expose APPLICATION to the global object.
  window.APPLICATION = APPLICATION;

  // Initialize application.
  APPLICATION.INITIALIZER.init();
})(window, window.jQuery);

/***/ }),

/***/ "./public/scripts/utils/utils.js":
/*!***************************************!*\
  !*** ./public/scripts/utils/utils.js ***!
  \***************************************/
/***/ (() => {

// This is a place for some tools required in the application

window.UTILS = window.UTILS || {};
window.UTILS.helloWorld = function () {
  console.log("Hello World");
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"application": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkatk14_skelet"] = self["webpackChunkatk14_skelet"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["vendor"], () => (__webpack_require__("./public/scripts/utils/utils.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendor"], () => (__webpack_require__("./public/scripts/application.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;