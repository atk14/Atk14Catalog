"use strict";
(self["webpackChunkatk14_skelet"] = self["webpackChunkatk14_skelet"] || []).push([["public_dist_scripts_modules_photoswipe_esm_min_js"],{

/***/ "./public/dist/scripts/modules/photoswipe.esm.min.js":
/*!***********************************************************!*\
  !*** ./public/dist/scripts/modules/photoswipe.esm.min.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Q)
/* harmony export */ });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/*!
  * PhotoSwipe 5.3.2 - https://photoswipe.com
  * (c) 2022 Dmytro Semenov
  */
function t(t, i, s) {
  var h = document.createElement(i || "div");
  return t && (h.className = t), s && s.appendChild(h), h;
}
function i(t, i) {
  return t.x = i.x, t.y = i.y, void 0 !== i.id && (t.id = i.id), t;
}
function s(t) {
  t.x = Math.round(t.x), t.y = Math.round(t.y);
}
function h(t, i) {
  var s = Math.abs(t.x - i.x),
    h = Math.abs(t.y - i.y);
  return Math.sqrt(s * s + h * h);
}
function e(t, i) {
  return t.x === i.x && t.y === i.y;
}
function n(t, i, s) {
  return Math.min(Math.max(t, i), s);
}
function o(t, i, s) {
  var h = "translate3d(" + t + "px," + (i || 0) + "px,0)";
  return void 0 !== s && (h += " scale3d(" + s + "," + s + ",1)"), h;
}
function r(t, i, s, h) {
  t.style.transform = o(i, s, h);
}
function a(t, i, s, h) {
  t.style.transition = i ? i + " " + s + "ms " + (h || "cubic-bezier(.4,0,.22,1)") : "none";
}
function c(t, i, s) {
  t.style.width = "number" == typeof i ? i + "px" : i, t.style.height = "number" == typeof s ? s + "px" : s;
}
var l = "idle",
  p = "loading",
  u = "loaded",
  d = "error";
function m() {
  return !(!navigator.vendor || !navigator.vendor.match(/apple/i));
}
var f = !1;
try {
  window.addEventListener("test", null, Object.defineProperty({}, "passive", {
    get: function get() {
      f = !0;
    }
  }));
} catch (t) {}
var w = /*#__PURE__*/function () {
  function w() {
    _classCallCheck(this, w);
    this.t = [];
  }
  _createClass(w, [{
    key: "add",
    value: function add(t, i, s, h) {
      this.i(t, i, s, h);
    }
  }, {
    key: "remove",
    value: function remove(t, i, s, h) {
      this.i(t, i, s, h, !0);
    }
  }, {
    key: "removeAll",
    value: function removeAll() {
      var _this = this;
      this.t.forEach(function (t) {
        _this.i(t.target, t.type, t.listener, t.passive, !0, !0);
      }), this.t = [];
    }
  }, {
    key: "i",
    value: function i(t, _i, s, h, e, n) {
      var _this2 = this;
      if (!t) return;
      var o = e ? "removeEventListener" : "addEventListener";
      _i.split(" ").forEach(function (i) {
        if (i) {
          n || (e ? _this2.t = _this2.t.filter(function (h) {
            return h.type !== i || h.listener !== s || h.target !== t;
          }) : _this2.t.push({
            target: t,
            type: i,
            listener: s,
            passive: h
          }));
          var _r = !!f && {
            passive: h || !1
          };
          t[o](i, s, _r);
        }
      });
    }
  }]);
  return w;
}();
function g(t, i) {
  if (t.getViewportSizeFn) {
    var _s = t.getViewportSizeFn(t, i);
    if (_s) return _s;
  }
  return {
    x: document.documentElement.clientWidth,
    y: window.innerHeight
  };
}
function _(t, i, s, h, e) {
  var n;
  if (i.paddingFn) n = i.paddingFn(s, h, e)[t];else if (i.padding) n = i.padding[t];else {
    var _s2 = "padding" + t[0].toUpperCase() + t.slice(1);
    i[_s2] && (n = i[_s2]);
  }
  return n || 0;
}
function v(t, i, s, h) {
  return {
    x: i.x - _("left", t, i, s, h) - _("right", t, i, s, h),
    y: i.y - _("top", t, i, s, h) - _("bottom", t, i, s, h)
  };
}
var y = /*#__PURE__*/function () {
  function y(t) {
    _classCallCheck(this, y);
    this.slide = t, this.currZoomLevel = 1, this.center = {}, this.max = {}, this.min = {}, this.reset();
  }
  _createClass(y, [{
    key: "update",
    value: function update(t) {
      this.currZoomLevel = t, this.slide.width ? (this.o("x"), this.o("y"), this.slide.pswp.dispatch("calcBounds", {
        slide: this.slide
      })) : this.reset();
    }
  }, {
    key: "o",
    value: function o(t) {
      var i = this.slide.pswp,
        s = this.slide["x" === t ? "width" : "height"] * this.currZoomLevel,
        h = _("x" === t ? "left" : "top", i.options, i.viewportSize, this.slide.data, this.slide.index),
        e = this.slide.panAreaSize[t];
      this.center[t] = Math.round((e - s) / 2) + h, this.max[t] = s > e ? Math.round(e - s) + h : this.center[t], this.min[t] = s > e ? h : this.center[t];
    }
  }, {
    key: "reset",
    value: function reset() {
      this.center.x = 0, this.center.y = 0, this.max.x = 0, this.max.y = 0, this.min.x = 0, this.min.y = 0;
    }
  }, {
    key: "correctPan",
    value: function correctPan(t, i) {
      return n(i, this.max[t], this.min[t]);
    }
  }]);
  return y;
}();
var b = /*#__PURE__*/function () {
  function b(t, i, s, h) {
    _classCallCheck(this, b);
    this.pswp = h, this.options = t, this.itemData = i, this.index = s;
  }
  _createClass(b, [{
    key: "update",
    value: function update(t, i, s) {
      this.elementSize = {
        x: t,
        y: i
      }, this.panAreaSize = s;
      var h = this.panAreaSize.x / this.elementSize.x,
        e = this.panAreaSize.y / this.elementSize.y;
      this.fit = Math.min(1, h < e ? h : e), this.fill = Math.min(1, h > e ? h : e), this.vFill = Math.min(1, e), this.initial = this.l(), this.secondary = this.p(), this.max = Math.max(this.initial, this.secondary, this.u()), this.min = Math.min(this.fit, this.initial, this.secondary), this.pswp && this.pswp.dispatch("zoomLevelsUpdate", {
        zoomLevels: this,
        slideData: this.itemData
      });
    }
  }, {
    key: "m",
    value: function m(t) {
      var i = t + "ZoomLevel",
        s = this.options[i];
      if (s) return "function" == typeof s ? s(this) : "fill" === s ? this.fill : "fit" === s ? this.fit : Number(s);
    }
  }, {
    key: "p",
    value: function p() {
      var t = this.m("secondary");
      return t || (t = Math.min(1, 3 * this.fit), t * this.elementSize.x > 4e3 && (t = 4e3 / this.elementSize.x), t);
    }
  }, {
    key: "l",
    value: function l() {
      return this.m("initial") || this.fit;
    }
  }, {
    key: "u",
    value: function u() {
      var t = this.m("max");
      return t || Math.max(1, 4 * this.fit);
    }
  }]);
  return b;
}();
var S = /*#__PURE__*/function () {
  function S(i, s, h) {
    _classCallCheck(this, S);
    this.data = i, this.index = s, this.pswp = h, this.isActive = s === h.currIndex, this.currentResolution = 0, this.panAreaSize = {}, this.isFirstSlide = this.isActive && !h.opener.isOpen, this.zoomLevels = new b(h.options, i, s, h), this.pswp.dispatch("gettingData", {
      slide: this,
      data: this.data,
      index: s
    }), this.pan = {
      x: 0,
      y: 0
    }, this.content = this.pswp.contentLoader.getContentBySlide(this), this.container = t("pswp__zoom-wrap"), this.currZoomLevel = 1, this.width = this.content.width, this.height = this.content.height, this.bounds = new y(this), this.prevDisplayedWidth = -1, this.prevDisplayedHeight = -1, this.pswp.dispatch("slideInit", {
      slide: this
    });
  }
  _createClass(S, [{
    key: "setIsActive",
    value: function setIsActive(t) {
      t && !this.isActive ? this.activate() : !t && this.isActive && this.deactivate();
    }
  }, {
    key: "append",
    value: function append(t) {
      this.holderElement = t, this.container.style.transformOrigin = "0 0", this.data && (this.calculateSize(), this.load(), this.updateContentSize(), this.appendHeavy(), this.holderElement.appendChild(this.container), this.zoomAndPanToInitial(), this.pswp.dispatch("firstZoomPan", {
        slide: this
      }), this.applyCurrentZoomPan(), this.pswp.dispatch("afterSetContent", {
        slide: this
      }), this.isActive && this.activate());
    }
  }, {
    key: "load",
    value: function load() {
      this.content.load(), this.pswp.dispatch("slideLoad", {
        slide: this
      });
    }
  }, {
    key: "appendHeavy",
    value: function appendHeavy() {
      var t = this.pswp;
      !this.heavyAppended && t.opener.isOpen && !t.mainScroll.isShifted() && (this.isActive, 1) && (this.pswp.dispatch("appendHeavy", {
        slide: this
      }).defaultPrevented || (this.heavyAppended = !0, this.content.append(), this.pswp.dispatch("appendHeavyContent", {
        slide: this
      })));
    }
  }, {
    key: "activate",
    value: function activate() {
      this.isActive = !0, this.appendHeavy(), this.content.activate(), this.pswp.dispatch("slideActivate", {
        slide: this
      });
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.isActive = !1, this.content.deactivate(), this.currZoomLevel !== this.zoomLevels.initial && this.calculateSize(), this.currentResolution = 0, this.zoomAndPanToInitial(), this.applyCurrentZoomPan(), this.updateContentSize(), this.pswp.dispatch("slideDeactivate", {
        slide: this
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.content.hasSlide = !1, this.content.remove(), this.container.remove(), this.pswp.dispatch("slideDestroy", {
        slide: this
      });
    }
  }, {
    key: "resize",
    value: function resize() {
      this.currZoomLevel !== this.zoomLevels.initial && this.isActive ? (this.calculateSize(), this.bounds.update(this.currZoomLevel), this.panTo(this.pan.x, this.pan.y)) : (this.calculateSize(), this.currentResolution = 0, this.zoomAndPanToInitial(), this.applyCurrentZoomPan(), this.updateContentSize());
    }
  }, {
    key: "updateContentSize",
    value: function updateContentSize(t) {
      var i = this.currentResolution || this.zoomLevels.initial;
      if (!i) return;
      var s = Math.round(this.width * i) || this.pswp.viewportSize.x,
        h = Math.round(this.height * i) || this.pswp.viewportSize.y;
      (this.sizeChanged(s, h) || t) && this.content.setDisplayedSize(s, h);
    }
  }, {
    key: "sizeChanged",
    value: function sizeChanged(t, i) {
      return (t !== this.prevDisplayedWidth || i !== this.prevDisplayedHeight) && (this.prevDisplayedWidth = t, this.prevDisplayedHeight = i, !0);
    }
  }, {
    key: "getPlaceholderElement",
    value: function getPlaceholderElement() {
      if (this.content.placeholder) return this.content.placeholder.element;
    }
  }, {
    key: "zoomTo",
    value: function zoomTo(t, i, h, e) {
      var _this3 = this;
      var o = this.pswp;
      if (!this.isZoomable() || o.mainScroll.isShifted()) return;
      o.dispatch("beforeZoomTo", {
        destZoomLevel: t,
        centerPoint: i,
        transitionDuration: h
      }), o.animations.stopAllPan();
      var r = this.currZoomLevel;
      e || (t = n(t, this.zoomLevels.min, this.zoomLevels.max)), this.setZoomLevel(t), this.pan.x = this.calculateZoomToPanOffset("x", i, r), this.pan.y = this.calculateZoomToPanOffset("y", i, r), s(this.pan);
      var a = function a() {
        _this3.g(t), _this3.applyCurrentZoomPan();
      };
      h ? o.animations.startTransition({
        isPan: !0,
        name: "zoomTo",
        target: this.container,
        transform: this.getCurrentTransform(),
        onComplete: a,
        duration: h,
        easing: o.options.easing
      }) : a();
    }
  }, {
    key: "toggleZoom",
    value: function toggleZoom(t) {
      this.zoomTo(this.currZoomLevel === this.zoomLevels.initial ? this.zoomLevels.secondary : this.zoomLevels.initial, t, this.pswp.options.zoomAnimationDuration);
    }
  }, {
    key: "setZoomLevel",
    value: function setZoomLevel(t) {
      this.currZoomLevel = t, this.bounds.update(this.currZoomLevel);
    }
  }, {
    key: "calculateZoomToPanOffset",
    value: function calculateZoomToPanOffset(t, i, s) {
      if (0 === this.bounds.max[t] - this.bounds.min[t]) return this.bounds.center[t];
      i || (i = this.pswp.getViewportCenterPoint());
      var h = this.currZoomLevel / s;
      return this.bounds.correctPan(t, (this.pan[t] - i[t]) * h + i[t]);
    }
  }, {
    key: "panTo",
    value: function panTo(t, i) {
      this.pan.x = this.bounds.correctPan("x", t), this.pan.y = this.bounds.correctPan("y", i), this.applyCurrentZoomPan();
    }
  }, {
    key: "isPannable",
    value: function isPannable() {
      return this.width && this.currZoomLevel > this.zoomLevels.fit;
    }
  }, {
    key: "isZoomable",
    value: function isZoomable() {
      return this.width && this.content.isZoomable();
    }
  }, {
    key: "applyCurrentZoomPan",
    value: function applyCurrentZoomPan() {
      this._(this.pan.x, this.pan.y, this.currZoomLevel), this === this.pswp.currSlide && this.pswp.dispatch("zoomPanUpdate", {
        slide: this
      });
    }
  }, {
    key: "zoomAndPanToInitial",
    value: function zoomAndPanToInitial() {
      this.currZoomLevel = this.zoomLevels.initial, this.bounds.update(this.currZoomLevel), i(this.pan, this.bounds.center), this.pswp.dispatch("initialZoomPan", {
        slide: this
      });
    }
  }, {
    key: "_",
    value: function _(t, i, s) {
      s /= this.currentResolution || this.zoomLevels.initial, r(this.container, t, i, s);
    }
  }, {
    key: "calculateSize",
    value: function calculateSize() {
      var t = this.pswp;
      i(this.panAreaSize, v(t.options, t.viewportSize, this.data, this.index)), this.zoomLevels.update(this.width, this.height, this.panAreaSize), t.dispatch("calcSlideSize", {
        slide: this
      });
    }
  }, {
    key: "getCurrentTransform",
    value: function getCurrentTransform() {
      var t = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);
      return o(this.pan.x, this.pan.y, t);
    }
  }, {
    key: "g",
    value: function g(t) {
      t !== this.currentResolution && (this.currentResolution = t, this.updateContentSize(), this.pswp.dispatch("resolutionChanged"));
    }
  }]);
  return S;
}();
var x = /*#__PURE__*/function () {
  function x(t) {
    _classCallCheck(this, x);
    this.gestures = t, this.pswp = t.pswp, this.startPan = {};
  }
  _createClass(x, [{
    key: "start",
    value: function start() {
      i(this.startPan, this.pswp.currSlide.pan), this.pswp.animations.stopAll();
    }
  }, {
    key: "change",
    value: function change() {
      var _this$gestures = this.gestures,
        t = _this$gestures.p1,
        i = _this$gestures.prevP1,
        h = _this$gestures.dragAxis,
        e = _this$gestures.pswp,
        n = e.currSlide;
      if ("y" === h && e.options.closeOnVerticalDrag && n.currZoomLevel <= n.zoomLevels.fit && !this.gestures.isMultitouch) {
        var _s3 = n.pan.y + (t.y - i.y);
        if (!e.dispatch("verticalDrag", {
          panY: _s3
        }).defaultPrevented) {
          this.v("y", _s3, .6);
          var _t = 1 - Math.abs(this.S(n.pan.y));
          e.applyBgOpacity(_t), n.applyCurrentZoomPan();
        }
      } else {
        this.M("x") || (this.M("y"), s(n.pan), n.applyCurrentZoomPan());
      }
    }
  }, {
    key: "end",
    value: function end() {
      var _this$gestures2 = this.gestures,
        t = _this$gestures2.pswp,
        i = _this$gestures2.velocity,
        s = t.mainScroll;
      var h = 0;
      if (t.animations.stopAll(), s.isShifted()) {
        var _e = (s.x - s.getCurrSlideX()) / t.viewportSize.x;
        i.x < -.5 && _e < 0 || i.x < .1 && _e < -.5 ? (h = 1, i.x = Math.min(i.x, 0)) : (i.x > .5 && _e > 0 || i.x > -.1 && _e > .5) && (h = -1, i.x = Math.max(i.x, 0)), s.moveIndexBy(h, !0, i.x);
      }
      t.currSlide.currZoomLevel > t.currSlide.zoomLevels.max || this.gestures.isMultitouch ? this.gestures.zoomLevels.correctZoomPan(!0) : (this.P("x"), this.P("y"));
    }
  }, {
    key: "P",
    value: function P(t) {
      var i = this.pswp,
        s = i.currSlide,
        h = this.gestures.velocity,
        e = s.pan,
        o = s.bounds,
        r = e[t],
        a = i.bgOpacity < 1 && "y" === t,
        c = r + function (t, i) {
          return t * i / (1 - i);
        }(h[t], .995);
      if (a) {
        var _t2 = this.S(r),
          _s4 = this.S(c);
        if (_t2 < 0 && _s4 < -.4 || _t2 > 0 && _s4 > .4) return void i.close();
      }
      var l = o.correctPan(t, c);
      if (r === l) return;
      var p = l === c ? 1 : .82,
        u = i.bgOpacity,
        d = l - r;
      i.animations.startSpring({
        name: "panGesture" + t,
        isPan: !0,
        start: r,
        end: l,
        velocity: h[t],
        dampingRatio: p,
        onUpdate: function onUpdate(h) {
          if (a && i.bgOpacity < 1) {
            var _t3 = 1 - (l - h) / d;
            i.applyBgOpacity(n(u + (1 - u) * _t3, 0, 1));
          }
          e[t] = Math.floor(h), s.applyCurrentZoomPan();
        }
      });
    }
  }, {
    key: "M",
    value: function M(t) {
      var _this$gestures3 = this.gestures,
        i = _this$gestures3.p1,
        s = _this$gestures3.pswp,
        h = _this$gestures3.dragAxis,
        e = _this$gestures3.prevP1,
        n = _this$gestures3.isMultitouch,
        o = s.currSlide,
        r = s.mainScroll,
        a = i[t] - e[t],
        c = r.x + a;
      if (!a) return;
      if ("x" === t && !o.isPannable() && !n) return r.moveTo(c, !0), !0;
      var l = o.bounds,
        p = o.pan[t] + a;
      if (s.options.allowPanToNext && "x" === h && "x" === t && !n) {
        var _i2 = r.getCurrSlideX(),
          _s5 = r.x - _i2,
          _h = a > 0,
          _e2 = !_h;
        if (p > l.min[t] && _h) {
          if (l.min[t] <= this.startPan[t]) return r.moveTo(c, !0), !0;
          this.v(t, p);
        } else if (p < l.max[t] && _e2) {
          if (this.startPan[t] <= l.max[t]) return r.moveTo(c, !0), !0;
          this.v(t, p);
        } else if (0 !== _s5) {
          if (_s5 > 0) return r.moveTo(Math.max(c, _i2), !0), !0;
          if (_s5 < 0) return r.moveTo(Math.min(c, _i2), !0), !0;
        } else this.v(t, p);
      } else "y" === t && (r.isShifted() || l.min.y === l.max.y) || this.v(t, p);
    }
  }, {
    key: "S",
    value: function S(t) {
      return (t - this.pswp.currSlide.bounds.center.y) / (this.pswp.viewportSize.y / 3);
    }
  }, {
    key: "v",
    value: function v(t, i, s) {
      var _this$pswp$currSlide = this.pswp.currSlide,
        h = _this$pswp$currSlide.pan,
        e = _this$pswp$currSlide.bounds;
      if (e.correctPan(t, i) !== i || s) {
        var _e3 = Math.round(i - h[t]);
        h[t] += _e3 * (s || .35);
      } else h[t] = i;
    }
  }]);
  return x;
}();
function M(t, i, s) {
  return t.x = (i.x + s.x) / 2, t.y = (i.y + s.y) / 2, t;
}
var z = /*#__PURE__*/function () {
  function z(t) {
    _classCallCheck(this, z);
    this.gestures = t, this.pswp = this.gestures.pswp, this.C = {}, this.T = {}, this.D = {};
  }
  _createClass(z, [{
    key: "start",
    value: function start() {
      this.I = this.pswp.currSlide.currZoomLevel, i(this.C, this.pswp.currSlide.pan), this.pswp.animations.stopAllPan(), this.A = !1;
    }
  }, {
    key: "change",
    value: function change() {
      var _this$gestures4 = this.gestures,
        t = _this$gestures4.p1,
        i = _this$gestures4.startP1,
        s = _this$gestures4.p2,
        e = _this$gestures4.startP2,
        n = _this$gestures4.pswp,
        o = n.currSlide,
        r = o.zoomLevels.min,
        a = o.zoomLevels.max;
      if (!o.isZoomable() || n.mainScroll.isShifted()) return;
      M(this.T, i, e), M(this.D, t, s);
      var c = 1 / h(i, e) * h(t, s) * this.I;
      if (c > o.zoomLevels.initial + o.zoomLevels.initial / 15 && (this.A = !0), c < r) {
        if (n.options.pinchToClose && !this.A && this.I <= o.zoomLevels.initial) {
          var _t4 = 1 - (r - c) / (r / 1.2);
          n.dispatch("pinchClose", {
            bgOpacity: _t4
          }).defaultPrevented || n.applyBgOpacity(_t4);
        } else c = r - .15 * (r - c);
      } else c > a && (c = a + .05 * (c - a));
      o.pan.x = this.L("x", c), o.pan.y = this.L("y", c), o.setZoomLevel(c), o.applyCurrentZoomPan();
    }
  }, {
    key: "end",
    value: function end() {
      var t = this.pswp,
        i = t.currSlide;
      i.currZoomLevel < i.zoomLevels.initial && !this.A && t.options.pinchToClose ? t.close() : this.correctZoomPan();
    }
  }, {
    key: "L",
    value: function L(t, i) {
      var s = i / this.I;
      return this.D[t] - (this.T[t] - this.C[t]) * s;
    }
  }, {
    key: "correctZoomPan",
    value: function correctZoomPan(t) {
      var s = this.pswp,
        h = s.currSlide;
      if (!h.isZoomable()) return;
      void 0 === this.D.x && (t = !0);
      var o = h.currZoomLevel;
      var r,
        a = !0;
      o < h.zoomLevels.initial ? r = h.zoomLevels.initial : o > h.zoomLevels.max ? r = h.zoomLevels.max : (a = !1, r = o);
      var c = s.bgOpacity,
        l = s.bgOpacity < 1,
        p = i({}, h.pan);
      var u = i({}, p);
      t && (this.D.x = 0, this.D.y = 0, this.T.x = 0, this.T.y = 0, this.I = o, i(this.C, p)), a && (u = {
        x: this.L("x", r),
        y: this.L("y", r)
      }), h.setZoomLevel(r), u = {
        x: h.bounds.correctPan("x", u.x),
        y: h.bounds.correctPan("y", u.y)
      }, h.setZoomLevel(o);
      var d = !0;
      if (e(u, p) && (d = !1), !d && !a && !l) return h.g(r), void h.applyCurrentZoomPan();
      s.animations.stopAllPan(), s.animations.startSpring({
        isPan: !0,
        start: 0,
        end: 1e3,
        velocity: 0,
        dampingRatio: 1,
        naturalFrequency: 40,
        onUpdate: function onUpdate(t) {
          if (t /= 1e3, d || a) {
            if (d && (h.pan.x = p.x + (u.x - p.x) * t, h.pan.y = p.y + (u.y - p.y) * t), a) {
              var _i3 = o + (r - o) * t;
              h.setZoomLevel(_i3);
            }
            h.applyCurrentZoomPan();
          }
          l && s.bgOpacity < 1 && s.applyBgOpacity(n(c + (1 - c) * t, 0, 1));
        },
        onComplete: function onComplete() {
          h.g(r), h.applyCurrentZoomPan();
        }
      });
    }
  }]);
  return z;
}();
function P(t) {
  return !!t.target.closest(".pswp__container");
}
var C = /*#__PURE__*/function () {
  function C(t) {
    _classCallCheck(this, C);
    this.gestures = t;
  }
  _createClass(C, [{
    key: "click",
    value: function click(t, i) {
      var s = i.target.classList,
        h = s.contains("pswp__img"),
        e = s.contains("pswp__item") || s.contains("pswp__zoom-wrap");
      h ? this.k("imageClick", t, i) : e && this.k("bgClick", t, i);
    }
  }, {
    key: "tap",
    value: function tap(t, i) {
      P(i) && this.k("tap", t, i);
    }
  }, {
    key: "doubleTap",
    value: function doubleTap(t, i) {
      P(i) && this.k("doubleTap", t, i);
    }
  }, {
    key: "k",
    value: function k(t, i, s) {
      var h = this.gestures.pswp,
        e = h.currSlide,
        n = t + "Action",
        o = h.options[n];
      if (!h.dispatch(n, {
        point: i,
        originalEvent: s
      }).defaultPrevented) if ("function" != typeof o) switch (o) {
        case "close":
        case "next":
          h[o]();
          break;
        case "zoom":
          e.toggleZoom(i);
          break;
        case "zoom-or-close":
          e.isZoomable() && e.zoomLevels.secondary !== e.zoomLevels.initial ? e.toggleZoom(i) : h.options.clickToCloseNonZoomable && h.close();
          break;
        case "toggle-controls":
          this.gestures.pswp.element.classList.toggle("pswp--ui-visible");
      } else o.call(h, i, s);
    }
  }]);
  return C;
}();
var T = /*#__PURE__*/function () {
  function T(t) {
    var _this4 = this;
    _classCallCheck(this, T);
    this.pswp = t, this.dragAxis = void 0, this.p1 = {}, this.p2 = {}, this.prevP1 = {}, this.prevP2 = {}, this.startP1 = {}, this.startP2 = {}, this.velocity = {}, this.Z = {}, this.F = {}, this.O = 0, this.B = [], this.R = "ontouchstart" in window, this.N = !!window.PointerEvent, this.supportsTouch = this.R || this.N && navigator.maxTouchPoints > 1, this.supportsTouch || (t.options.allowPanToNext = !1), this.drag = new x(this), this.zoomLevels = new z(this), this.tapHandler = new C(this), t.on("bindEvents", function () {
      t.events.add(t.scrollWrap, "click", function (t) {
        return _this4.V(t);
      }), _this4.N ? _this4.G("pointer", "down", "up", "cancel") : _this4.R ? (_this4.G("touch", "start", "end", "cancel"), t.scrollWrap.ontouchmove = function () {}, t.scrollWrap.ontouchend = function () {}) : _this4.G("mouse", "down", "up");
    });
  }
  _createClass(T, [{
    key: "G",
    value: function G(t, i, s, h) {
      var e = this.pswp,
        n = e.events,
        o = h ? t + h : "";
      n.add(e.scrollWrap, t + i, this.onPointerDown.bind(this)), n.add(window, t + "move", this.onPointerMove.bind(this)), n.add(window, t + s, this.onPointerUp.bind(this)), o && n.add(e.scrollWrap, o, this.onPointerUp.bind(this));
    }
  }, {
    key: "onPointerDown",
    value: function onPointerDown(t) {
      var s;
      if ("mousedown" !== t.type && "mouse" !== t.pointerType || (s = !0), s && t.button > 0) return;
      var h = this.pswp;
      h.opener.isOpen ? h.dispatch("pointerDown", {
        originalEvent: t
      }).defaultPrevented || (s && (h.mouseDetected(), this.U(t)), h.animations.stopAll(), this.q(t, "down"), this.pointerDown = !0, 1 === this.O && (this.dragAxis = null, i(this.startP1, this.p1)), this.O > 1 ? (this.H(), this.isMultitouch = !0) : this.isMultitouch = !1) : t.preventDefault();
    }
  }, {
    key: "onPointerMove",
    value: function onPointerMove(t) {
      t.preventDefault(), this.O && (this.q(t, "move"), this.pswp.dispatch("pointerMove", {
        originalEvent: t
      }).defaultPrevented || (1 !== this.O || this.isDragging ? this.O > 1 && !this.isZooming && (this.K(), this.isZooming = !0, this.W(), this.zoomLevels.start(), this.j(), this.X()) : (this.dragAxis || this.Y(), this.dragAxis && !this.isDragging && (this.isZooming && (this.isZooming = !1, this.zoomLevels.end()), this.isDragging = !0, this.H(), this.W(), this.$ = Date.now(), this.J = !1, i(this.F, this.p1), this.velocity.x = 0, this.velocity.y = 0, this.drag.start(), this.j(), this.X()))));
    }
  }, {
    key: "K",
    value: function K() {
      this.isDragging && (this.isDragging = !1, this.J || this.tt(!0), this.drag.end(), this.dragAxis = null);
    }
  }, {
    key: "onPointerUp",
    value: function onPointerUp(t) {
      this.O && (this.q(t, "up"), this.pswp.dispatch("pointerUp", {
        originalEvent: t
      }).defaultPrevented || (0 === this.O && (this.pointerDown = !1, this.j(), this.isDragging ? this.K() : this.isZooming || this.isMultitouch || this.it(t)), this.O < 2 && this.isZooming && (this.isZooming = !1, this.zoomLevels.end(), 1 === this.O && (this.dragAxis = null, this.W()))));
    }
  }, {
    key: "X",
    value: function X() {
      (this.isDragging || this.isZooming) && (this.tt(), this.isDragging ? e(this.p1, this.prevP1) || this.drag.change() : e(this.p1, this.prevP1) && e(this.p2, this.prevP2) || this.zoomLevels.change(), this.st(), this.raf = requestAnimationFrame(this.X.bind(this)));
    }
  }, {
    key: "tt",
    value: function tt(t) {
      var s = Date.now(),
        h = s - this.$;
      h < 50 && !t || (this.velocity.x = this.ht("x", h), this.velocity.y = this.ht("y", h), this.$ = s, i(this.F, this.p1), this.J = !0);
    }
  }, {
    key: "it",
    value: function it(t) {
      var _this5 = this;
      var s = this.pswp.mainScroll;
      if (s.isShifted()) return void s.moveIndexBy(0, !0);
      if (t.type.indexOf("cancel") > 0) return;
      if ("mouseup" === t.type || "mouse" === t.pointerType) return void this.tapHandler.click(this.startP1, t);
      var e = this.pswp.options.doubleTapAction ? 300 : 0;
      this.et ? (this.H(), h(this.Z, this.startP1) < 25 && this.tapHandler.doubleTap(this.startP1, t)) : (i(this.Z, this.startP1), this.et = setTimeout(function () {
        _this5.tapHandler.tap(_this5.startP1, t), _this5.H();
      }, e));
    }
  }, {
    key: "H",
    value: function H() {
      this.et && (clearTimeout(this.et), this.et = null);
    }
  }, {
    key: "ht",
    value: function ht(t, i) {
      var s = this.p1[t] - this.F[t];
      return Math.abs(s) > 1 && i > 5 ? s / i : 0;
    }
  }, {
    key: "j",
    value: function j() {
      this.raf && (cancelAnimationFrame(this.raf), this.raf = null);
    }
  }, {
    key: "U",
    value: function U(t) {
      return t.preventDefault(), !0;
    }
  }, {
    key: "q",
    value: function q(t, s) {
      if (this.N) {
        var _h2 = t,
          _e4 = this.B.findIndex(function (t) {
            return t.id === _h2.pointerId;
          });
        "up" === s && _e4 > -1 ? this.B.splice(_e4, 1) : "down" === s && -1 === _e4 ? this.B.push(this.nt(_h2, {})) : _e4 > -1 && this.nt(_h2, this.B[_e4]), this.O = this.B.length, this.O > 0 && i(this.p1, this.B[0]), this.O > 1 && i(this.p2, this.B[1]);
      } else {
        var _i4 = t;
        this.O = 0, _i4.type.indexOf("touch") > -1 ? _i4.touches && _i4.touches.length > 0 && (this.nt(_i4.touches[0], this.p1), this.O++, _i4.touches.length > 1 && (this.nt(_i4.touches[1], this.p2), this.O++)) : (this.nt(t, this.p1), "up" === s ? this.O = 0 : this.O++);
      }
    }
  }, {
    key: "st",
    value: function st() {
      i(this.prevP1, this.p1), i(this.prevP2, this.p2);
    }
  }, {
    key: "W",
    value: function W() {
      i(this.startP1, this.p1), i(this.startP2, this.p2), this.st();
    }
  }, {
    key: "Y",
    value: function Y() {
      if (this.pswp.mainScroll.isShifted()) this.dragAxis = "x";else {
        var _t5 = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);
        if (0 !== _t5) {
          var _i5 = _t5 > 0 ? "x" : "y";
          Math.abs(this.p1[_i5] - this.startP1[_i5]) >= 10 && (this.dragAxis = _i5);
        }
      }
    }
  }, {
    key: "nt",
    value: function nt(t, i) {
      return i.x = t.pageX - this.pswp.offset.x, i.y = t.pageY - this.pswp.offset.y, "pointerId" in t ? i.id = t.pointerId : void 0 !== t.identifier && (i.id = t.identifier), i;
    }
  }, {
    key: "V",
    value: function V(t) {
      this.pswp.mainScroll.isShifted() && (t.preventDefault(), t.stopPropagation());
    }
  }]);
  return T;
}();
var D = /*#__PURE__*/function () {
  function D(t) {
    _classCallCheck(this, D);
    this.pswp = t, this.x = 0, this.slideWidth = void 0, this.itemHolders = void 0, this.resetPosition();
  }
  _createClass(D, [{
    key: "resize",
    value: function resize(t) {
      var _this6 = this;
      var i = this.pswp,
        s = Math.round(i.viewportSize.x + i.viewportSize.x * i.options.spacing),
        h = s !== this.slideWidth;
      h && (this.slideWidth = s, this.moveTo(this.getCurrSlideX())), this.itemHolders.forEach(function (i, s) {
        h && r(i.el, (s + _this6.ot) * _this6.slideWidth), t && i.slide && i.slide.resize();
      });
    }
  }, {
    key: "resetPosition",
    value: function resetPosition() {
      this.rt = 0, this.ct = 0, this.slideWidth = 0, this.ot = -1;
    }
  }, {
    key: "appendHolders",
    value: function appendHolders() {
      this.itemHolders = [];
      for (var _i6 = 0; _i6 < 3; _i6++) {
        var _s6 = t("pswp__item", !1, this.pswp.container);
        _s6.style.display = 1 === _i6 ? "block" : "none", this.itemHolders.push({
          el: _s6
        });
      }
    }
  }, {
    key: "canBeSwiped",
    value: function canBeSwiped() {
      return this.pswp.getNumItems() > 1;
    }
  }, {
    key: "moveIndexBy",
    value: function moveIndexBy(t, i, s) {
      var _this7 = this;
      var h = this.pswp;
      var e = h.potentialIndex + t;
      var n = h.getNumItems();
      if (h.canLoop()) {
        e = h.getLoopedIndex(e);
        var _i7 = (t + n) % n;
        t = _i7 <= n / 2 ? _i7 : _i7 - n;
      } else e < 0 ? e = 0 : e >= n && (e = n - 1), t = e - h.potentialIndex;
      h.potentialIndex = e, this.rt -= t, h.animations.stopMainScroll();
      var o = this.getCurrSlideX();
      if (i) {
        h.animations.startSpring({
          isMainScroll: !0,
          start: this.x,
          end: o,
          velocity: s || 0,
          naturalFrequency: 30,
          dampingRatio: 1,
          onUpdate: function onUpdate(t) {
            _this7.moveTo(t);
          },
          onComplete: function onComplete() {
            _this7.updateCurrItem(), h.appendHeavy();
          }
        });
        var _t6 = h.potentialIndex - h.currIndex;
        if (h.canLoop()) {
          var _i8 = (_t6 + n) % n;
          _t6 = _i8 <= n / 2 ? _i8 : _i8 - n;
        }
        Math.abs(_t6) > 1 && this.updateCurrItem();
      } else this.moveTo(o), this.updateCurrItem();
      if (t) return !0;
    }
  }, {
    key: "getCurrSlideX",
    value: function getCurrSlideX() {
      return this.slideWidth * this.rt;
    }
  }, {
    key: "isShifted",
    value: function isShifted() {
      return this.x !== this.getCurrSlideX();
    }
  }, {
    key: "updateCurrItem",
    value: function updateCurrItem() {
      var t = this.pswp,
        i = this.ct - this.rt;
      if (!i) return;
      this.ct = this.rt, t.currIndex = t.potentialIndex;
      var s,
        h = Math.abs(i);
      h >= 3 && (this.ot += i + (i > 0 ? -3 : 3), h = 3);
      for (var _e5 = 0; _e5 < h; _e5++) i > 0 ? (s = this.itemHolders.shift(), this.itemHolders[2] = s, this.ot++, r(s.el, (this.ot + 2) * this.slideWidth), t.setContent(s, t.currIndex - h + _e5 + 2)) : (s = this.itemHolders.pop(), this.itemHolders.unshift(s), this.ot--, r(s.el, this.ot * this.slideWidth), t.setContent(s, t.currIndex + h - _e5 - 2));
      Math.abs(this.ot) > 50 && !this.isShifted() && (this.resetPosition(), this.resize()), t.animations.stopAllPan(), this.itemHolders.forEach(function (t, i) {
        t.slide && t.slide.setIsActive(1 === i);
      }), t.currSlide = this.itemHolders[1].slide, t.contentLoader.updateLazy(i), t.currSlide.applyCurrentZoomPan(), t.dispatch("change");
    }
  }, {
    key: "moveTo",
    value: function moveTo(t, i) {
      var s, h;
      !this.pswp.canLoop() && i && (s = (this.slideWidth * this.rt - t) / this.slideWidth, s += this.pswp.currIndex, h = Math.round(t - this.x), (s < 0 && h > 0 || s >= this.pswp.getNumItems() - 1 && h < 0) && (t = this.x + .35 * h)), this.x = t, r(this.pswp.container, t), this.pswp.dispatch("moveMainScroll", {
        x: t,
        dragging: i
      });
    }
  }]);
  return D;
}();
var I = /*#__PURE__*/function () {
  function I(t) {
    var _this8 = this;
    _classCallCheck(this, I);
    this.pswp = t, t.on("bindEvents", function () {
      t.options.initialPointerPos || _this8.lt(), t.events.add(document, "focusin", _this8.ut.bind(_this8)), t.events.add(document, "keydown", _this8.dt.bind(_this8));
    });
    var i = document.activeElement;
    t.on("destroy", function () {
      t.options.returnFocus && i && _this8.ft && i.focus();
    });
  }
  _createClass(I, [{
    key: "lt",
    value: function lt() {
      this.ft || (this.pswp.element.focus(), this.ft = !0);
    }
  }, {
    key: "dt",
    value: function dt(t) {
      var i = this.pswp;
      if (i.dispatch("keydown", {
        originalEvent: t
      }).defaultPrevented) return;
      if (function (t) {
        if (2 === t.which || t.ctrlKey || t.metaKey || t.altKey || t.shiftKey) return !0;
      }(t)) return;
      var s, h, e;
      switch (t.keyCode) {
        case 27:
          i.options.escKey && (s = "close");
          break;
        case 90:
          s = "toggleZoom";
          break;
        case 37:
          h = "x";
          break;
        case 38:
          h = "y";
          break;
        case 39:
          h = "x", e = !0;
          break;
        case 40:
          e = !0, h = "y";
          break;
        case 9:
          this.lt();
      }
      if (h) {
        t.preventDefault();
        var _n = i.currSlide;
        i.options.arrowKeys && "x" === h && i.getNumItems() > 1 ? s = e ? "next" : "prev" : _n && _n.currZoomLevel > _n.zoomLevels.fit && (_n.pan[h] += e ? -80 : 80, _n.panTo(_n.pan.x, _n.pan.y));
      }
      s && (t.preventDefault(), i[s]());
    }
  }, {
    key: "ut",
    value: function ut(t) {
      var i = this.pswp.template;
      document === t.target || i === t.target || i.contains(t.target) || i.focus();
    }
  }]);
  return I;
}();
var A = /*#__PURE__*/function () {
  function A(t) {
    var _this9 = this;
    _classCallCheck(this, A);
    this.props = t;
    var i = t.target,
      s = t.onComplete,
      h = t.transform,
      e = t.onFinish;
    var n = t.duration,
      o = t.easing;
    this.onFinish = e;
    var r = h ? "transform" : "opacity",
      c = t[r];
    this.wt = i, this.gt = s, n = n || 333, o = o || "cubic-bezier(.4,0,.22,1)", this._t = this._t.bind(this), this.vt = setTimeout(function () {
      a(i, r, n, o), _this9.vt = setTimeout(function () {
        i.addEventListener("transitionend", _this9._t, !1), i.addEventListener("transitioncancel", _this9._t, !1), _this9.vt = setTimeout(function () {
          _this9.yt();
        }, n + 500), i.style[r] = c;
      }, 30);
    }, 0);
  }
  _createClass(A, [{
    key: "_t",
    value: function _t(t) {
      t.target === this.wt && this.yt();
    }
  }, {
    key: "yt",
    value: function yt() {
      this.bt || (this.bt = !0, this.onFinish(), this.gt && this.gt());
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.vt && clearTimeout(this.vt), a(this.wt), this.wt.removeEventListener("transitionend", this._t, !1), this.wt.removeEventListener("transitioncancel", this._t, !1), this.bt || this.yt();
    }
  }]);
  return A;
}();
var E = /*#__PURE__*/function () {
  function E(t, i, s) {
    _classCallCheck(this, E);
    this.velocity = 1e3 * t, this.St = i || .75, this.xt = s || 12, this.St < 1 && (this.Mt = this.xt * Math.sqrt(1 - this.St * this.St));
  }
  _createClass(E, [{
    key: "easeFrame",
    value: function easeFrame(t, i) {
      var s,
        h = 0;
      i /= 1e3;
      var e = Math.pow(Math.E, -this.St * this.xt * i);
      if (1 === this.St) s = this.velocity + this.xt * t, h = (t + s * i) * e, this.velocity = h * -this.xt + s * e;else if (this.St < 1) {
        s = 1 / this.Mt * (this.St * this.xt * t + this.velocity);
        var _n2 = Math.cos(this.Mt * i),
          _o = Math.sin(this.Mt * i);
        h = e * (t * _n2 + s * _o), this.velocity = h * -this.xt * this.St + e * (-this.Mt * t * _o + this.Mt * s * _n2);
      }
      return h;
    }
  }]);
  return E;
}();
var L = /*#__PURE__*/function () {
  function L(t) {
    var _this10 = this;
    _classCallCheck(this, L);
    this.props = t;
    var i = t.start,
      s = t.end,
      h = t.velocity,
      e = t.onUpdate,
      n = t.onComplete,
      o = t.onFinish,
      r = t.dampingRatio,
      a = t.naturalFrequency;
    this.onFinish = o;
    var c = new E(h, r, a);
    var l = Date.now(),
      p = i - s;
    var u = function u() {
      _this10.zt && (p = c.easeFrame(p, Date.now() - l), Math.abs(p) < 1 && Math.abs(c.velocity) < 50 ? (e(s), n && n(), _this10.onFinish()) : (l = Date.now(), e(p + s), _this10.zt = requestAnimationFrame(u)));
    };
    this.zt = requestAnimationFrame(u);
  }
  _createClass(L, [{
    key: "destroy",
    value: function destroy() {
      this.zt >= 0 && cancelAnimationFrame(this.zt), this.zt = null;
    }
  }]);
  return L;
}();
var k = /*#__PURE__*/function () {
  function k() {
    _classCallCheck(this, k);
    this.activeAnimations = [];
  }
  _createClass(k, [{
    key: "startSpring",
    value: function startSpring(t) {
      this.Pt(t, !0);
    }
  }, {
    key: "startTransition",
    value: function startTransition(t) {
      this.Pt(t);
    }
  }, {
    key: "Pt",
    value: function Pt(t, i) {
      var _this11 = this;
      var s;
      return s = i ? new L(t) : new A(t), this.activeAnimations.push(s), s.onFinish = function () {
        return _this11.stop(s);
      }, s;
    }
  }, {
    key: "stop",
    value: function stop(t) {
      t.destroy();
      var i = this.activeAnimations.indexOf(t);
      i > -1 && this.activeAnimations.splice(i, 1);
    }
  }, {
    key: "stopAll",
    value: function stopAll() {
      this.activeAnimations.forEach(function (t) {
        t.destroy();
      }), this.activeAnimations = [];
    }
  }, {
    key: "stopAllPan",
    value: function stopAllPan() {
      this.activeAnimations = this.activeAnimations.filter(function (t) {
        return !t.props.isPan || (t.destroy(), !1);
      });
    }
  }, {
    key: "stopMainScroll",
    value: function stopMainScroll() {
      this.activeAnimations = this.activeAnimations.filter(function (t) {
        return !t.props.isMainScroll || (t.destroy(), !1);
      });
    }
  }, {
    key: "isPanRunning",
    value: function isPanRunning() {
      return this.activeAnimations.some(function (t) {
        return t.props.isPan;
      });
    }
  }]);
  return k;
}();
var Z = /*#__PURE__*/function () {
  function Z(t) {
    _classCallCheck(this, Z);
    this.pswp = t, t.events.add(t.element, "wheel", this.Ct.bind(this));
  }
  _createClass(Z, [{
    key: "Ct",
    value: function Ct(t) {
      t.preventDefault();
      var i = this.pswp.currSlide;
      var s = t.deltaX,
        h = t.deltaY;
      if (i && !this.pswp.dispatch("wheel", {
        originalEvent: t
      }).defaultPrevented) if (t.ctrlKey || this.pswp.options.wheelToZoom) {
        if (i.isZoomable()) {
          var _s7 = -h;
          1 === t.deltaMode ? _s7 *= .05 : _s7 *= t.deltaMode ? 1 : .002, _s7 = Math.pow(2, _s7);
          var _e6 = i.currZoomLevel * _s7;
          i.zoomTo(_e6, {
            x: t.clientX,
            y: t.clientY
          });
        }
      } else i.isPannable() && (1 === t.deltaMode && (s *= 18, h *= 18), i.panTo(i.pan.x - s, i.pan.y - h));
    }
  }]);
  return Z;
}();
var F = /*#__PURE__*/_createClass(function F(i, s) {
  _classCallCheck(this, F);
  var h = s.name || s.className;
  var e = s.html;
  if (!1 === i.options[h]) return;
  "string" == typeof i.options[h + "SVG"] && (e = i.options[h + "SVG"]), i.dispatch("uiElementCreate", {
    data: s
  });
  var n,
    o = "";
  s.isButton ? (o += "pswp__button ", o += s.className || "pswp__button--".concat(s.name)) : o += s.className || "pswp__".concat(s.name);
  var r = s.isButton ? s.tagName || "button" : s.tagName || "div";
  if (r = r.toLowerCase(), n = t(o, r), s.isButton) {
    n = t(o, r), "button" === r && (n.type = "button");
    var _e7 = s.title;
    var _a = s.ariaLabel;
    "string" == typeof i.options[h + "Title"] && (_e7 = i.options[h + "Title"]), _e7 && (n.title = _e7), (_a || _e7) && n.setAttribute("aria-label", _a || _e7);
  }
  n.innerHTML = function (t) {
    if ("string" == typeof t) return t;
    if (!t || !t.isCustomSVG) return "";
    var i = t;
    var s = '<svg aria-hidden="true" class="pswp__icn" viewBox="0 0 %d %d" width="%d" height="%d">';
    return s = s.split("%d").join(i.size || 32), i.outlineID && (s += '<use class="pswp__icn-shadow" xlink:href="#' + i.outlineID + '"/>'), s += i.inner, s += "</svg>", s;
  }(e), s.onInit && s.onInit(n, i), s.onClick && (n.onclick = function (t) {
    "string" == typeof s.onClick ? i[s.onClick]() : s.onClick(t, n, i);
  });
  var a = s.appendTo || "bar";
  var c;
  "bar" === a ? (i.topBar || (i.topBar = t("pswp__top-bar pswp__hide-on-close", "div", i.scrollWrap)), c = i.topBar) : (n.classList.add("pswp__hide-on-close"), c = "wrapper" === a ? i.scrollWrap : i.element), c.appendChild(i.applyFilters("uiElement", n, s));
});
function O(t, i, s) {
  t.classList.add("pswp__button--arrow"), i.on("change", function () {
    i.options.loop || (t.disabled = s ? !(i.currIndex < i.getNumItems() - 1) : !(i.currIndex > 0));
  });
}
var B = {
    name: "arrowPrev",
    className: "pswp__button--arrow--prev",
    title: "Previous",
    order: 10,
    isButton: !0,
    appendTo: "wrapper",
    html: {
      isCustomSVG: !0,
      size: 60,
      inner: '<path d="M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z" id="pswp__icn-arrow"/>',
      outlineID: "pswp__icn-arrow"
    },
    onClick: "prev",
    onInit: O
  },
  R = {
    name: "arrowNext",
    className: "pswp__button--arrow--next",
    title: "Next",
    order: 11,
    isButton: !0,
    appendTo: "wrapper",
    html: {
      isCustomSVG: !0,
      size: 60,
      inner: '<use xlink:href="#pswp__icn-arrow"/>',
      outlineID: "pswp__icn-arrow"
    },
    onClick: "next",
    onInit: function onInit(t, i) {
      O(t, i, !0);
    }
  },
  N = {
    name: "close",
    title: "Close",
    order: 20,
    isButton: !0,
    html: {
      isCustomSVG: !0,
      inner: '<path d="M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z" id="pswp__icn-close"/>',
      outlineID: "pswp__icn-close"
    },
    onClick: "close"
  },
  V = {
    name: "zoom",
    title: "Zoom",
    order: 10,
    isButton: !0,
    html: {
      isCustomSVG: !0,
      inner: '<path d="M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z" id="pswp__icn-zoom"/><path fill="currentColor" class="pswp__zoom-icn-bar-h" d="M11 16v-2h6v2z"/><path fill="currentColor" class="pswp__zoom-icn-bar-v" d="M13 12h2v6h-2z"/>',
      outlineID: "pswp__icn-zoom"
    },
    onClick: "toggleZoom"
  },
  G = {
    name: "preloader",
    appendTo: "bar",
    order: 7,
    html: {
      isCustomSVG: !0,
      inner: '<path fill-rule="evenodd" clip-rule="evenodd" d="M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z" id="pswp__icn-loading"/>',
      outlineID: "pswp__icn-loading"
    },
    onInit: function onInit(t, i) {
      var s, h;
      var e = function e(i) {
          var h, e;
          s !== i && (s = i, h = "active", e = i, t.classList[e ? "add" : "remove"]("pswp__preloader--" + h));
        },
        n = function n() {
          if (!i.currSlide.content.isLoading()) return e(!1), void (h && (clearTimeout(h), h = null));
          h || (h = setTimeout(function () {
            e(i.currSlide.content.isLoading()), h = null;
          }, i.options.preloaderDelay));
        };
      i.on("change", n), i.on("loadComplete", function (t) {
        i.currSlide === t.slide && n();
      }), i.ui.updatePreloaderVisibility = n;
    }
  },
  U = {
    name: "counter",
    order: 5,
    onInit: function onInit(t, i) {
      i.on("change", function () {
        t.innerText = i.currIndex + 1 + i.options.indexIndicatorSep + i.getNumItems();
      });
    }
  };
function q(t, i) {
  t.classList[i ? "add" : "remove"]("pswp--zoomed-in");
}
var H = /*#__PURE__*/function () {
  function H(t) {
    _classCallCheck(this, H);
    this.pswp = t, this.updatePreloaderVisibility = void 0, this.Tt = void 0;
  }
  _createClass(H, [{
    key: "init",
    value: function init() {
      var _this12 = this;
      var t = this.pswp;
      this.isRegistered = !1, this.uiElementsData = [N, B, R, V, G, U], t.dispatch("uiRegister"), this.uiElementsData.sort(function (t, i) {
        return (t.order || 0) - (i.order || 0);
      }), this.items = [], this.isRegistered = !0, this.uiElementsData.forEach(function (t) {
        _this12.registerElement(t);
      }), t.on("change", function () {
        t.element.classList[1 === t.getNumItems() ? "add" : "remove"]("pswp--one-slide");
      }), t.on("zoomPanUpdate", function () {
        return _this12.Dt();
      });
    }
  }, {
    key: "registerElement",
    value: function registerElement(t) {
      this.isRegistered ? this.items.push(new F(this.pswp, t)) : this.uiElementsData.push(t);
    }
  }, {
    key: "Dt",
    value: function Dt() {
      var _this$pswp = this.pswp,
        t = _this$pswp.template,
        i = _this$pswp.currSlide,
        s = _this$pswp.options;
      var h = i.currZoomLevel;
      if (this.pswp.opener.isClosing) return;
      if (this.pswp.opener.isOpen || (h = i.zoomLevels.initial), h === this.Tt) return;
      this.Tt = h;
      var e = i.zoomLevels.initial - i.zoomLevels.secondary;
      if (Math.abs(e) < .01 || !i.isZoomable()) return q(t, !1), void t.classList.remove("pswp--zoom-allowed");
      t.classList.add("pswp--zoom-allowed");
      q(t, (h === i.zoomLevels.initial ? i.zoomLevels.secondary : i.zoomLevels.initial) <= h), "zoom" !== s.imageClickAction && "zoom-or-close" !== s.imageClickAction || t.classList.add("pswp--click-to-zoom");
    }
  }]);
  return H;
}();
var K = /*#__PURE__*/function () {
  function K(t, i) {
    _classCallCheck(this, K);
    this.type = t, i && Object.assign(this, i);
  }
  _createClass(K, [{
    key: "preventDefault",
    value: function preventDefault() {
      this.defaultPrevented = !0;
    }
  }]);
  return K;
}();
var W = /*#__PURE__*/function () {
  function W(i, s) {
    _classCallCheck(this, W);
    this.element = t("pswp__img pswp__img--placeholder", i ? "img" : "", s), i && (this.element.decoding = "async", this.element.alt = "", this.element.src = i, this.element.setAttribute("role", "presentation")), this.element.setAttribute("aria-hiden", "true");
  }
  _createClass(W, [{
    key: "setDisplayedSize",
    value: function setDisplayedSize(t, i) {
      this.element && ("IMG" === this.element.tagName ? (c(this.element, 250, "auto"), this.element.style.transformOrigin = "0 0", this.element.style.transform = o(0, 0, t / 250)) : c(this.element, t, i));
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.element.parentNode && this.element.remove(), this.element = null;
    }
  }]);
  return W;
}();
var j = /*#__PURE__*/function () {
  function j(t, i, s) {
    _classCallCheck(this, j);
    this.instance = i, this.data = t, this.index = s, this.element = void 0, this.displayedImageWidth = 0, this.displayedImageHeight = 0, this.width = Number(this.data.w) || Number(this.data.width) || 0, this.height = Number(this.data.h) || Number(this.data.height) || 0, this.isAttached = !1, this.hasSlide = !1, this.state = l, this.data.type ? this.type = this.data.type : this.data.src ? this.type = "image" : this.type = "html", this.instance.dispatch("contentInit", {
      content: this
    });
  }
  _createClass(j, [{
    key: "removePlaceholder",
    value: function removePlaceholder() {
      var _this13 = this;
      this.placeholder && !this.keepPlaceholder() && setTimeout(function () {
        _this13.placeholder && (_this13.placeholder.destroy(), _this13.placeholder = null);
      }, 1e3);
    }
  }, {
    key: "load",
    value: function load(i, s) {
      if (this.slide && this.usePlaceholder()) if (this.placeholder) {
        var _t7 = this.placeholder.element;
        _t7 && !_t7.parentElement && this.slide.container.prepend(_t7);
      } else {
        var _t8 = this.instance.applyFilters("placeholderSrc", !(!this.data.msrc || !this.slide.isFirstSlide) && this.data.msrc, this);
        this.placeholder = new W(_t8, this.slide.container);
      }
      this.element && !s || this.instance.dispatch("contentLoad", {
        content: this,
        isLazy: i
      }).defaultPrevented || (this.isImageContent() ? (this.element = t("pswp__img", "img"), this.displayedImageWidth && this.loadImage(i)) : (this.element = t("pswp__content"), this.element.innerHTML = this.data.html || ""), s && this.slide && this.slide.updateContentSize(!0));
    }
  }, {
    key: "loadImage",
    value: function loadImage(t) {
      var _this14 = this;
      var i = this.element;
      this.instance.dispatch("contentLoadImage", {
        content: this,
        isLazy: t
      }).defaultPrevented || (this.updateSrcsetSizes(), this.data.srcset && (i.srcset = this.data.srcset), i.src = this.data.src, i.alt = this.data.alt || "", this.state = p, i.complete ? this.onLoaded() : (i.onload = function () {
        _this14.onLoaded();
      }, i.onerror = function () {
        _this14.onError();
      }));
    }
  }, {
    key: "setSlide",
    value: function setSlide(t) {
      this.slide = t, this.hasSlide = !0, this.instance = t.pswp;
    }
  }, {
    key: "onLoaded",
    value: function onLoaded() {
      this.state = u, this.slide && (this.instance.dispatch("loadComplete", {
        slide: this.slide,
        content: this
      }), this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode && (this.append(), this.slide.updateContentSize(!0)), this.state !== u && this.state !== d || this.removePlaceholder());
    }
  }, {
    key: "onError",
    value: function onError() {
      this.state = d, this.slide && (this.displayError(), this.instance.dispatch("loadComplete", {
        slide: this.slide,
        isError: !0,
        content: this
      }), this.instance.dispatch("loadError", {
        slide: this.slide,
        content: this
      }));
    }
  }, {
    key: "isLoading",
    value: function isLoading() {
      return this.instance.applyFilters("isContentLoading", this.state === p, this);
    }
  }, {
    key: "isError",
    value: function isError() {
      return this.state === d;
    }
  }, {
    key: "isImageContent",
    value: function isImageContent() {
      return "image" === this.type;
    }
  }, {
    key: "setDisplayedSize",
    value: function setDisplayedSize(t, i) {
      if (this.element && (this.placeholder && this.placeholder.setDisplayedSize(t, i), !this.instance.dispatch("contentResize", {
        content: this,
        width: t,
        height: i
      }).defaultPrevented && (c(this.element, t, i), this.isImageContent() && !this.isError()))) {
        var _s8 = !this.displayedImageWidth && t;
        this.displayedImageWidth = t, this.displayedImageHeight = i, _s8 ? this.loadImage(!1) : this.updateSrcsetSizes(), this.slide && this.instance.dispatch("imageSizeChange", {
          slide: this.slide,
          width: t,
          height: i,
          content: this
        });
      }
    }
  }, {
    key: "isZoomable",
    value: function isZoomable() {
      return this.instance.applyFilters("isContentZoomable", this.isImageContent() && this.state !== d, this);
    }
  }, {
    key: "updateSrcsetSizes",
    value: function updateSrcsetSizes() {
      if (this.data.srcset) {
        var _t9 = this.element,
          _i9 = this.instance.applyFilters("srcsetSizesWidth", this.displayedImageWidth, this);
        (!_t9.dataset.largestUsedSize || _i9 > parseInt(_t9.dataset.largestUsedSize, 10)) && (_t9.sizes = _i9 + "px", _t9.dataset.largestUsedSize = String(_i9));
      }
    }
  }, {
    key: "usePlaceholder",
    value: function usePlaceholder() {
      return this.instance.applyFilters("useContentPlaceholder", this.isImageContent(), this);
    }
  }, {
    key: "lazyLoad",
    value: function lazyLoad() {
      this.instance.dispatch("contentLazyLoad", {
        content: this
      }).defaultPrevented || this.load(!0);
    }
  }, {
    key: "keepPlaceholder",
    value: function keepPlaceholder() {
      return this.instance.applyFilters("isKeepingPlaceholder", this.isLoading(), this);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.hasSlide = !1, this.slide = null, this.instance.dispatch("contentDestroy", {
        content: this
      }).defaultPrevented || (this.remove(), this.placeholder && (this.placeholder.destroy(), this.placeholder = null), this.isImageContent() && this.element && (this.element.onload = null, this.element.onerror = null, this.element = null));
    }
  }, {
    key: "displayError",
    value: function displayError() {
      if (this.slide) {
        var _i10 = t("pswp__error-msg");
        _i10.innerText = this.instance.options.errorMsg, _i10 = this.instance.applyFilters("contentErrorElement", _i10, this), this.element = t("pswp__content pswp__error-msg-container"), this.element.appendChild(_i10), this.slide.container.innerText = "", this.slide.container.appendChild(this.element), this.slide.updateContentSize(!0), this.removePlaceholder();
      }
    }
  }, {
    key: "append",
    value: function append() {
      var _this15 = this;
      if (this.isAttached) return;
      if (this.isAttached = !0, this.state === d) return void this.displayError();
      if (this.instance.dispatch("contentAppend", {
        content: this
      }).defaultPrevented) return;
      var t = ("decode" in this.element);
      this.isImageContent() ? t && this.slide && (!this.slide.isActive || m()) ? (this.isDecoding = !0, this.element.decode()["finally"](function () {
        _this15.isDecoding = !1, _this15.appendImage();
      })) : this.appendImage() : this.element && !this.element.parentNode && this.slide.container.appendChild(this.element);
    }
  }, {
    key: "activate",
    value: function activate() {
      this.instance.dispatch("contentActivate", {
        content: this
      }).defaultPrevented || this.slide && (this.isImageContent() && this.isDecoding && !m() ? this.appendImage() : this.isError() && this.load(!1, !0));
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.instance.dispatch("contentDeactivate", {
        content: this
      });
    }
  }, {
    key: "remove",
    value: function remove() {
      this.isAttached = !1, this.instance.dispatch("contentRemove", {
        content: this
      }).defaultPrevented || (this.element && this.element.parentNode && this.element.remove(), this.placeholder && this.placeholder.element && this.placeholder.element.remove());
    }
  }, {
    key: "appendImage",
    value: function appendImage() {
      this.isAttached && (this.instance.dispatch("contentAppendImage", {
        content: this
      }).defaultPrevented || (this.slide && this.element && !this.element.parentNode && this.slide.container.appendChild(this.element), this.state !== u && this.state !== d || this.removePlaceholder()));
    }
  }]);
  return j;
}();
function X(t, i, s) {
  var h = i.createContentFromData(t, s);
  if (!h || !h.lazyLoad) return;
  var e = i.options,
    n = v(e, i.viewportSize || g(e, i), t, s),
    o = new b(e, t, -1);
  return o.update(h.width, h.height, n), h.lazyLoad(), h.setDisplayedSize(Math.ceil(h.width * o.initial), Math.ceil(h.height * o.initial)), h;
}
var Y = /*#__PURE__*/function () {
  function Y(t) {
    _classCallCheck(this, Y);
    this.pswp = t, this.limit = Math.max(t.options.preload[0] + t.options.preload[1] + 1, 5), this.It = [];
  }
  _createClass(Y, [{
    key: "updateLazy",
    value: function updateLazy(t) {
      var i = this.pswp;
      if (i.dispatch("lazyLoad").defaultPrevented) return;
      var s = i.options.preload,
        h = void 0 === t || t >= 0;
      var e;
      for (e = 0; e <= s[1]; e++) this.loadSlideByIndex(i.currIndex + (h ? e : -e));
      for (e = 1; e <= s[0]; e++) this.loadSlideByIndex(i.currIndex + (h ? -e : e));
    }
  }, {
    key: "loadSlideByIndex",
    value: function loadSlideByIndex(t) {
      t = this.pswp.getLoopedIndex(t);
      var i = this.getContentByIndex(t);
      i || (i = function (t, i) {
        var s = i.getItemData(t);
        if (!i.dispatch("lazyLoadSlide", {
          index: t,
          itemData: s
        }).defaultPrevented) return X(s, i, t);
      }(t, this.pswp), i && this.addToCache(i));
    }
  }, {
    key: "getContentBySlide",
    value: function getContentBySlide(t) {
      var i = this.getContentByIndex(t.index);
      return i || (i = this.pswp.createContentFromData(t.data, t.index), i && this.addToCache(i)), i && i.setSlide(t), i;
    }
  }, {
    key: "addToCache",
    value: function addToCache(t) {
      if (this.removeByIndex(t.index), this.It.push(t), this.It.length > this.limit) {
        var _t10 = this.It.findIndex(function (t) {
          return !t.isAttached && !t.hasSlide;
        });
        if (-1 !== _t10) {
          this.It.splice(_t10, 1)[0].destroy();
        }
      }
    }
  }, {
    key: "removeByIndex",
    value: function removeByIndex(t) {
      var i = this.It.findIndex(function (i) {
        return i.index === t;
      });
      -1 !== i && this.It.splice(i, 1);
    }
  }, {
    key: "getContentByIndex",
    value: function getContentByIndex(t) {
      return this.It.find(function (i) {
        return i.index === t;
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.It.forEach(function (t) {
        return t.destroy();
      }), this.It = null;
    }
  }]);
  return Y;
}();
var $ = /*#__PURE__*/function () {
  function $(t) {
    _classCallCheck(this, $);
    this.pswp = t, this.isClosed = !0, this.At = this.At.bind(this), this.Et = void 0, t.on("firstZoomPan", this.At);
  }
  _createClass($, [{
    key: "open",
    value: function open() {
      this.At(), this.Pt();
    }
  }, {
    key: "close",
    value: function close() {
      var _this16 = this;
      if (this.isClosed || this.isClosing || this.isOpening) return !1;
      var t = this.pswp.currSlide;
      return this.isOpen = !1, this.isOpening = !1, this.isClosing = !0, this.Lt = this.pswp.options.hideAnimationDuration, t && t.currZoomLevel * t.width >= this.pswp.options.maxWidthToAnimate && (this.Lt = 0), this.kt(), setTimeout(function () {
        _this16.Pt();
      }, this.Zt ? 30 : 0), !0;
    }
  }, {
    key: "At",
    value: function At() {
      if (this.pswp.off("firstZoomPan", this.At), !this.isOpening) {
        var _t11 = this.pswp.currSlide;
        this.isOpening = !0, this.isClosing = !1, this.Lt = this.pswp.options.showAnimationDuration, _t11 && _t11.zoomLevels.initial * _t11.width >= this.pswp.options.maxWidthToAnimate && (this.Lt = 0), this.kt();
      }
    }
  }, {
    key: "kt",
    value: function kt() {
      var t = this.pswp,
        i = this.pswp.currSlide,
        s = t.options;
      if ("fade" === s.showHideAnimationType ? (s.showHideOpacity = !0, this.Et = !1) : "none" === s.showHideAnimationType ? (s.showHideOpacity = !1, this.Lt = 0, this.Et = !1) : this.isOpening && t.Ft ? this.Et = t.Ft : this.Et = this.pswp.getThumbBounds(), this.Ot = i.getPlaceholderElement(), t.animations.stopAll(), this.Bt = this.Lt > 50, this.Rt = Boolean(this.Et) && i.content && i.content.usePlaceholder() && (!this.isClosing || !t.mainScroll.isShifted()), this.Rt ? this.Nt = s.showHideOpacity : (this.Nt = !0, this.isOpening && (i.zoomAndPanToInitial(), i.applyCurrentZoomPan())), this.Vt = !this.Nt && this.pswp.options.bgOpacity > .003, this.Gt = this.Nt ? t.element : t.bg, !this.Bt) return this.Lt = 0, this.Rt = !1, this.Vt = !1, this.Nt = !0, void (this.isOpening && (t.element.style.opacity = String(.003), t.applyBgOpacity(1)));
      this.Rt && this.Et && this.Et.innerRect ? (this.Zt = !0, this.Ut = this.pswp.container, this.qt = this.pswp.currSlide.holderElement, t.container.style.overflow = "hidden", t.container.style.width = t.viewportSize.x + "px") : this.Zt = !1, this.isOpening ? (this.Nt ? (t.element.style.opacity = String(.003), t.applyBgOpacity(1)) : (this.Vt && (t.bg.style.opacity = String(.003)), t.element.style.opacity = "1"), this.Rt && (this.Ht(), this.Ot && (this.Ot.style.willChange = "transform", this.Ot.style.opacity = String(.003)))) : this.isClosing && (t.mainScroll.itemHolders[0].el.style.display = "none", t.mainScroll.itemHolders[2].el.style.display = "none", this.Zt && 0 !== t.mainScroll.x && (t.mainScroll.resetPosition(), t.mainScroll.resize()));
    }
  }, {
    key: "Pt",
    value: function Pt() {
      var _this17 = this;
      this.isOpening && this.Bt && this.Ot && "IMG" === this.Ot.tagName ? new Promise(function (t) {
        var i = !1,
          s = !0;
        var h;
        (h = _this17.Ot, "decode" in h ? h.decode() : h.complete ? Promise.resolve(h) : new Promise(function (t, i) {
          h.onload = function () {
            return t(h);
          }, h.onerror = i;
        }))["finally"](function () {
          i = !0, s || t();
        }), setTimeout(function () {
          s = !1, i && t();
        }, 50), setTimeout(t, 250);
      })["finally"](function () {
        return _this17.Kt();
      }) : this.Kt();
    }
  }, {
    key: "Kt",
    value: function Kt() {
      this.pswp.element.style.setProperty("--pswp-transition-duration", this.Lt + "ms"), this.pswp.dispatch(this.isOpening ? "openingAnimationStart" : "closingAnimationStart"), this.pswp.dispatch("initialZoom" + (this.isOpening ? "In" : "Out")), this.pswp.element.classList[this.isOpening ? "add" : "remove"]("pswp--ui-visible"), this.isOpening ? (this.Ot && (this.Ot.style.opacity = "1"), this.Wt()) : this.isClosing && this.jt(), this.Bt || this.Xt();
    }
  }, {
    key: "Xt",
    value: function Xt() {
      var t = this.pswp;
      this.isOpen = this.isOpening, this.isClosed = this.isClosing, this.isOpening = !1, this.isClosing = !1, t.dispatch(this.isOpen ? "openingAnimationEnd" : "closingAnimationEnd"), t.dispatch("initialZoom" + (this.isOpen ? "InEnd" : "OutEnd")), this.isClosed ? t.destroy() : this.isOpen && (this.Rt && (t.container.style.overflow = "visible", t.container.style.width = "100%"), t.currSlide.applyCurrentZoomPan());
    }
  }, {
    key: "Wt",
    value: function Wt() {
      var t = this.pswp;
      this.Rt && (this.Zt && (this.Yt(this.Ut, "transform", "translate3d(0,0,0)"), this.Yt(this.qt, "transform", "none")), t.currSlide.zoomAndPanToInitial(), this.Yt(t.currSlide.container, "transform", t.currSlide.getCurrentTransform())), this.Vt && this.Yt(t.bg, "opacity", String(t.options.bgOpacity)), this.Nt && this.Yt(t.element, "opacity", "1");
    }
  }, {
    key: "jt",
    value: function jt() {
      var t = this.pswp;
      this.Rt && this.Ht(!0), this.Vt && t.bgOpacity > .01 && this.Yt(t.bg, "opacity", "0"), this.Nt && this.Yt(t.element, "opacity", "0");
    }
  }, {
    key: "Ht",
    value: function Ht(t) {
      if (!this.Et) return;
      var s = this.pswp,
        h = this.Et.innerRect,
        e = s.currSlide,
        n = s.viewportSize;
      if (this.Zt) {
        var _i11 = -n.x + (this.Et.x - h.x) + h.w,
          _s9 = -n.y + (this.Et.y - h.y) + h.h,
          _e8 = n.x - h.w,
          _a2 = n.y - h.h;
        t ? (this.Yt(this.Ut, "transform", o(_i11, _s9)), this.Yt(this.qt, "transform", o(_e8, _a2))) : (r(this.Ut, _i11, _s9), r(this.qt, _e8, _a2));
      }
      i(e.pan, h || this.Et), e.currZoomLevel = this.Et.w / e.width, t ? this.Yt(e.container, "transform", e.getCurrentTransform()) : e.applyCurrentZoomPan();
    }
  }, {
    key: "Yt",
    value: function Yt(t, i, s) {
      var _this18 = this;
      if (!this.Lt) return void (t.style[i] = s);
      var h = this.pswp.animations,
        e = {
          duration: this.Lt,
          easing: this.pswp.options.easing,
          onComplete: function onComplete() {
            h.activeAnimations.length || _this18.Xt();
          },
          target: t
        };
      e[i] = s, h.startTransition(e);
    }
  }]);
  return $;
}();
var J = {
  allowPanToNext: !0,
  spacing: .1,
  loop: !0,
  pinchToClose: !0,
  closeOnVerticalDrag: !0,
  hideAnimationDuration: 333,
  showAnimationDuration: 333,
  zoomAnimationDuration: 333,
  escKey: !0,
  arrowKeys: !0,
  returnFocus: !0,
  maxWidthToAnimate: 4e3,
  clickToCloseNonZoomable: !0,
  imageClickAction: "zoom-or-close",
  bgClickAction: "close",
  tapAction: "toggle-controls",
  doubleTapAction: "zoom",
  indexIndicatorSep: " / ",
  preloaderDelay: 2e3,
  bgOpacity: .8,
  index: 0,
  errorMsg: "The image cannot be loaded",
  preload: [1, 2],
  easing: "cubic-bezier(.4,0,.22,1)"
};
var Q = /*#__PURE__*/function (_ref) {
  _inherits(Q, _ref);
  var _super = _createSuper(Q);
  function Q(t) {
    var _this19;
    _classCallCheck(this, Q);
    _this19 = _super.call(this), _this19.ii(t), _this19.offset = {}, _this19.si = {}, _this19.viewportSize = {}, _this19.bgOpacity = 1, _this19.topBar = void 0, _this19.events = new w(), _this19.animations = new k(), _this19.mainScroll = new D(_assertThisInitialized(_this19)), _this19.gestures = new T(_assertThisInitialized(_this19)), _this19.opener = new $(_assertThisInitialized(_this19)), _this19.keyboard = new I(_assertThisInitialized(_this19)), _this19.contentLoader = new Y(_assertThisInitialized(_this19));
    return _this19;
  }
  _createClass(Q, [{
    key: "init",
    value: function init() {
      var _this20 = this;
      if (this.isOpen || this.isDestroying) return;
      this.isOpen = !0, this.dispatch("init"), this.dispatch("beforeOpen"), this.hi();
      var t = "pswp--open";
      return this.gestures.supportsTouch && (t += " pswp--touch"), this.options.mainClass && (t += " " + this.options.mainClass), this.element.className += " " + t, this.currIndex = this.options.index || 0, this.potentialIndex = this.currIndex, this.dispatch("firstUpdate"), this.scrollWheel = new Z(this), (Number.isNaN(this.currIndex) || this.currIndex < 0 || this.currIndex >= this.getNumItems()) && (this.currIndex = 0), this.gestures.supportsTouch || this.mouseDetected(), this.updateSize(), this.offset.y = window.pageYOffset, this.ei = this.getItemData(this.currIndex), this.dispatch("gettingData", {
        index: this.currIndex,
        data: this.ei,
        slide: void 0
      }), this.Ft = this.getThumbBounds(), this.dispatch("initialLayout"), this.on("openingAnimationEnd", function () {
        _this20.mainScroll.itemHolders[0].el.style.display = "block", _this20.mainScroll.itemHolders[2].el.style.display = "block", _this20.setContent(_this20.mainScroll.itemHolders[0], _this20.currIndex - 1), _this20.setContent(_this20.mainScroll.itemHolders[2], _this20.currIndex + 1), _this20.appendHeavy(), _this20.contentLoader.updateLazy(), _this20.events.add(window, "resize", _this20.ni.bind(_this20)), _this20.events.add(window, "scroll", _this20.oi.bind(_this20)), _this20.dispatch("bindEvents");
      }), this.setContent(this.mainScroll.itemHolders[1], this.currIndex), this.dispatch("change"), this.opener.open(), this.dispatch("afterInit"), !0;
    }
  }, {
    key: "getLoopedIndex",
    value: function getLoopedIndex(t) {
      var i = this.getNumItems();
      return this.options.loop && (t > i - 1 && (t -= i), t < 0 && (t += i)), t = n(t, 0, i - 1);
    }
  }, {
    key: "appendHeavy",
    value: function appendHeavy() {
      this.mainScroll.itemHolders.forEach(function (t) {
        t.slide && t.slide.appendHeavy();
      });
    }
  }, {
    key: "goTo",
    value: function goTo(t) {
      this.mainScroll.moveIndexBy(this.getLoopedIndex(t) - this.potentialIndex);
    }
  }, {
    key: "next",
    value: function next() {
      this.goTo(this.potentialIndex + 1);
    }
  }, {
    key: "prev",
    value: function prev() {
      this.goTo(this.potentialIndex - 1);
    }
  }, {
    key: "zoomTo",
    value: function zoomTo() {
      var _this$currSlide;
      (_this$currSlide = this.currSlide).zoomTo.apply(_this$currSlide, arguments);
    }
  }, {
    key: "toggleZoom",
    value: function toggleZoom() {
      this.currSlide.toggleZoom();
    }
  }, {
    key: "close",
    value: function close() {
      this.opener.isOpen && !this.isDestroying && (this.isDestroying = !0, this.dispatch("close"), this.events.removeAll(), this.opener.close());
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (!this.isDestroying) return this.options.showHideAnimationType = "none", void this.close();
      this.dispatch("destroy"), this.listeners = null, this.scrollWrap.ontouchmove = null, this.scrollWrap.ontouchend = null, this.element.remove(), this.mainScroll.itemHolders.forEach(function (t) {
        t.slide && t.slide.destroy();
      }), this.contentLoader.destroy(), this.events.removeAll();
    }
  }, {
    key: "refreshSlideContent",
    value: function refreshSlideContent(t) {
      var _this21 = this;
      this.contentLoader.removeByIndex(t), this.mainScroll.itemHolders.forEach(function (i, s) {
        var h = _this21.currSlide.index - 1 + s;
        _this21.canLoop() && (h = _this21.getLoopedIndex(h)), h === t && (_this21.setContent(i, t, !0), 1 === s && (_this21.currSlide = i.slide, i.slide.setIsActive(!0)));
      }), this.dispatch("change");
    }
  }, {
    key: "setContent",
    value: function setContent(t, i, s) {
      if (this.canLoop() && (i = this.getLoopedIndex(i)), t.slide) {
        if (t.slide.index === i && !s) return;
        t.slide.destroy(), t.slide = null;
      }
      if (!this.canLoop() && (i < 0 || i >= this.getNumItems())) return;
      var h = this.getItemData(i);
      t.slide = new S(h, i, this), i === this.currIndex && (this.currSlide = t.slide), t.slide.append(t.el);
    }
  }, {
    key: "getViewportCenterPoint",
    value: function getViewportCenterPoint() {
      return {
        x: this.viewportSize.x / 2,
        y: this.viewportSize.y / 2
      };
    }
  }, {
    key: "updateSize",
    value: function updateSize(t) {
      if (this.isDestroying) return;
      var s = g(this.options, this);
      !t && e(s, this.si) || (i(this.si, s), this.dispatch("beforeResize"), i(this.viewportSize, this.si), this.oi(), this.dispatch("viewportSize"), this.mainScroll.resize(this.opener.isOpen), !this.hasMouse && window.matchMedia("(any-hover: hover)").matches && this.mouseDetected(), this.dispatch("resize"));
    }
  }, {
    key: "applyBgOpacity",
    value: function applyBgOpacity(t) {
      this.bgOpacity = Math.max(t, 0), this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);
    }
  }, {
    key: "mouseDetected",
    value: function mouseDetected() {
      this.hasMouse || (this.hasMouse = !0, this.element.classList.add("pswp--has_mouse"));
    }
  }, {
    key: "ni",
    value: function ni() {
      var _this22 = this;
      this.updateSize(), /iPhone|iPad|iPod/i.test(window.navigator.userAgent) && setTimeout(function () {
        _this22.updateSize();
      }, 500);
    }
  }, {
    key: "oi",
    value: function oi() {
      this.setScrollOffset(0, window.pageYOffset);
    }
  }, {
    key: "setScrollOffset",
    value: function setScrollOffset(t, i) {
      this.offset.x = t, this.offset.y = i, this.dispatch("updateScrollOffset");
    }
  }, {
    key: "hi",
    value: function hi() {
      this.element = t("pswp"), this.element.setAttribute("tabindex", "-1"), this.element.setAttribute("role", "dialog"), this.template = this.element, this.bg = t("pswp__bg", !1, this.element), this.scrollWrap = t("pswp__scroll-wrap", !1, this.element), this.container = t("pswp__container", !1, this.scrollWrap), this.mainScroll.appendHolders(), this.ui = new H(this), this.ui.init(), (this.options.appendToEl || document.body).appendChild(this.element);
    }
  }, {
    key: "getThumbBounds",
    value: function getThumbBounds() {
      return function (t, i, s) {
        var h = s.dispatch("thumbBounds", {
          index: t,
          itemData: i,
          instance: s
        });
        if (h.thumbBounds) return h.thumbBounds;
        var e = i.element;
        var n, o;
        if (e && !1 !== s.options.thumbSelector) {
          var _t12 = s.options.thumbSelector || "img";
          o = e.matches(_t12) ? e : e.querySelector(_t12);
        }
        return o = s.applyFilters("thumbEl", o, i, t), o && (n = i.thumbCropped ? function (t, i, s) {
          var h = t.getBoundingClientRect(),
            e = h.width / i,
            n = h.height / s,
            o = e > n ? e : n,
            r = (h.width - i * o) / 2,
            a = (h.height - s * o) / 2,
            c = {
              x: h.left + r,
              y: h.top + a,
              w: i * o
            };
          return c.innerRect = {
            w: h.width,
            h: h.height,
            x: r,
            y: a
          }, c;
        }(o, i.width || i.w, i.height || i.h) : function (t) {
          var i = t.getBoundingClientRect();
          return {
            x: i.left,
            y: i.top,
            w: i.width
          };
        }(o)), s.applyFilters("thumbBounds", n, i, t);
      }(this.currIndex, this.currSlide ? this.currSlide.data : this.ei, this);
    }
  }, {
    key: "canLoop",
    value: function canLoop() {
      return this.options.loop && this.getNumItems() > 2;
    }
  }, {
    key: "ii",
    value: function ii(t) {
      window.matchMedia("(prefers-reduced-motion), (update: slow)").matches && (t.showHideAnimationType = "none", t.zoomAnimationDuration = 0), this.options = _objectSpread(_objectSpread({}, J), t);
    }
  }]);
  return Q;
}( /*#__PURE__*/function (_ref2) {
  _inherits(_class, _ref2);
  var _super2 = _createSuper(_class);
  function _class() {
    _classCallCheck(this, _class);
    return _super2.apply(this, arguments);
  }
  _createClass(_class, [{
    key: "getNumItems",
    value: function getNumItems() {
      var t;
      var i = this.options.dataSource;
      i ? "length" in i ? t = i.length : "gallery" in i && (i.items || (i.items = this.Qt(i.gallery)), i.items && (t = i.items.length)) : t = 0;
      var s = this.dispatch("numItems", {
        dataSource: i,
        numItems: t
      });
      return this.applyFilters("numItems", s.numItems, i);
    }
  }, {
    key: "createContentFromData",
    value: function createContentFromData(t, i) {
      return new j(t, this, i);
    }
  }, {
    key: "getItemData",
    value: function getItemData(t) {
      var i = this.options.dataSource;
      var s;
      Array.isArray(i) ? s = i[t] : i && i.gallery && (i.items || (i.items = this.Qt(i.gallery)), s = i.items[t]);
      var h = s;
      h instanceof Element && (h = this.ti(h));
      var e = this.dispatch("itemData", {
        itemData: h || {},
        index: t
      });
      return this.applyFilters("itemData", e.itemData, t);
    }
  }, {
    key: "Qt",
    value: function Qt(t) {
      return this.options.children || this.options.childSelector ? function (t, i) {
        var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;
        var h = [];
        if (t instanceof Element) h = [t];else if (t instanceof NodeList || Array.isArray(t)) h = Array.from(t);else {
          var _e9 = "string" == typeof t ? t : i;
          _e9 && (h = Array.from(s.querySelectorAll(_e9)));
        }
        return h;
      }(this.options.children, this.options.childSelector, t) || [] : [t];
    }
  }, {
    key: "ti",
    value: function ti(t) {
      var i = {
          element: t
        },
        s = "A" === t.tagName ? t : t.querySelector("a");
      if (s) {
        i.src = s.dataset.pswpSrc || s.href, s.dataset.pswpSrcset && (i.srcset = s.dataset.pswpSrcset), i.width = parseInt(s.dataset.pswpWidth, 10), i.height = parseInt(s.dataset.pswpHeight, 10), i.w = i.width, i.h = i.height, s.dataset.pswpType && (i.type = s.dataset.pswpType);
        var _h3 = t.querySelector("img");
        _h3 && (i.msrc = _h3.currentSrc || _h3.src, i.alt = _h3.getAttribute("alt")), (s.dataset.pswpCropped || s.dataset.cropped) && (i.thumbCropped = !0);
      }
      return this.applyFilters("domItemData", i, t, s);
    }
  }, {
    key: "lazyLoadData",
    value: function lazyLoadData(t, i) {
      return X(t, this, i);
    }
  }]);
  return _class;
}( /*#__PURE__*/function () {
  function _class2() {
    _classCallCheck(this, _class2);
    this.$t = {}, this.Jt = {}, this.pswp = void 0, this.options = void 0;
  }
  _createClass(_class2, [{
    key: "addFilter",
    value: function addFilter(t, i) {
      var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
      this.Jt[t] || (this.Jt[t] = []), this.Jt[t].push({
        fn: i,
        priority: s
      }), this.Jt[t].sort(function (t, i) {
        return t.priority - i.priority;
      }), this.pswp && this.pswp.addFilter(t, i, s);
    }
  }, {
    key: "removeFilter",
    value: function removeFilter(t, i) {
      this.Jt[t] && (this.Jt[t] = this.Jt[t].filter(function (t) {
        return t.fn !== i;
      })), this.pswp && this.pswp.removeFilter(t, i);
    }
  }, {
    key: "applyFilters",
    value: function applyFilters(t) {
      var _this23 = this;
      for (var _len = arguments.length, i = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        i[_key - 1] = arguments[_key];
      }
      return this.Jt[t] && this.Jt[t].forEach(function (t) {
        i[0] = t.fn.apply(_this23, i);
      }), i[0];
    }
  }, {
    key: "on",
    value: function on(t, i) {
      this.$t[t] || (this.$t[t] = []), this.$t[t].push(i), this.pswp && this.pswp.on(t, i);
    }
  }, {
    key: "off",
    value: function off(t, i) {
      this.$t[t] && (this.$t[t] = this.$t[t].filter(function (t) {
        return i !== t;
      })), this.pswp && this.pswp.off(t, i);
    }
  }, {
    key: "dispatch",
    value: function dispatch(t, i) {
      var _this24 = this;
      if (this.pswp) return this.pswp.dispatch(t, i);
      var s = new K(t, i);
      return this.$t ? (this.$t[t] && this.$t[t].forEach(function (t) {
        t.call(_this24, s);
      }), s) : s;
    }
  }]);
  return _class2;
}()));


/***/ })

}]);